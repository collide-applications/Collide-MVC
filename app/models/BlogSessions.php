<?php

/**
 * BlogSessions
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    Collide MVC
 * @subpackage Model
 * @author     Radu Graur <radu.graur@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class BlogSessions extends BaseBlogSessions{
    /**
     * Add session array into database
     *
     * @access  public
     * @param   string  $sess   serialized session array
     * @param   integer $expire session lifetime
     * @return  boolean
     */
    public function setSession( $sess, $expire ){
        logWrite( "BlogSessions::setSession( \$sess, {$expire} )" );
        
        // get session data for this user
        $data = $this->getSession( $expire );
        
        // if any data returned then update data, else insert data
        if( !is_null( $data ) ){
            // update
            return Doctrine_Query::create()->
                update( 'BlogSessions' )->
                set( 'data', '?', $sess )->
                set( 'start', 'UNIX_TIMESTAMP()' )->
                set( 'last', 'UNIX_TIMESTAMP()' )->
                where( 'id = ?', $data['id'] )->
                execute();
        }else{
            // insert
            $this->data     = $sess;
            $this->start    = time();
            $this->last     = time();
            $this->ip       = $_SERVER['REMOTE_ADDR'];
            $this->agent    = $_SERVER['HTTP_USER_AGENT'];

            return $this->save();
        }
    }

    /**
     * Get session data or check if session exists
     *
     * @access  public
     * @param   integer $expire session lifetime
     * @return  mixed   session data or false if not found
     */
    public function getSession( $expire ){
        logWrite( "BlogSessions::getSession( {$expire} )" );
        
        $res = Doctrine_Query::create()->
            select( 'id, data' )->
            from( 'BlogSessions' )->
            where( 'ip = ?', $_SERVER['REMOTE_ADDR'] )->
            andWhere( 'agent = ?', $_SERVER['HTTP_USER_AGENT'] )->
            andWhere( '( UNIX_TIMESTAMP() - ( last + ' . $expire . ' ) ) <= 0' )->
            orderBy( 'last DESC' )->
            fetchArray();

        // if no session found return false
        if( count( $res ) == 0 ){
            return null;
        }

        return $res[0];
    }

    /**
     * Cleanup old entries
     *
     * @access  public
     * @param   integer $expire session lifetime
     * @return  void
     */
    public function cleanup( $expire ){
        logWrite( "BlogSessions::cleanup( {$expire} )" );

        Doctrine_Query::create()->
            delete( 'BlogSessions' )->
            where( '( UNIX_TIMESTAMP() - ( last + ' . $expire . ' ) ) > 0' )->
            execute();
    }
}